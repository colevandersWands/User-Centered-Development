steps
	decide on a reason for the site
	build a list of user stories
	place them in a dependancy tree
	choose a deployment schedule
	wire frame
	html
	for user story in order
		make it happen
		gremlin test it 

project
	scotch tutorial?
		https://scotch.io/tutorials/make-material-design-websites-with-the-materialize-css-framework
		https://codepen.io/qnimate/full/WbpKbJ/

repo
	readme
		title
		app description
			who it's for
			what it does for them
		index
			user stories
			dependency chart
			dev schedule
			learning journal
			wire frame - direct link to the url
		user stories
			all of them, why those, how they fit with your app
		dependancy chart
			link to the sketchboard diagram hosted in this repo
		dev schedule
			the order in which you'll implment the stories and why that order
		learning journal
			things learned
			vocab learned
			struggles
			plans
	index.html
		the final version 
		live in demo
	public
		scripts.js (?)
		event-listeners.js
		materialize
	specs.md
		event listeners
			what user story they support
		functions
			specs
	tests
		gremlins.js
		others?  think not

lo's
	tools
		sketchboard?
		sketchboard
		materialize
		devtools
		terminal/editor
		git/hub
		https://github.com/tapio/live-server
			-g, no need for package.json
	skills
		wireframing
		project estimation
		self-knowledge
	concepts
		app = user * data.  * interaction
		event driven programming
	development planning
		versions
		front-back development
		user stories
		dev schdule


resources
	wireframe md
	materialize md
	problem solving (first part)





